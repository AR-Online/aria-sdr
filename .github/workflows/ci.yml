name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with ruff
      run: |
        ruff check .
        ruff format --check .
    
    - name: Type check with mypy
      run: |
        mypy main.py --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest tests/ -v --tb=short
      env:
        FASTAPI_BEARER_TOKEN: test-token
        OPENAI_API_KEY: test-key
        ASSISTANT_ID: test-assistant
        SUPABASE_URL: https://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: test-key
        CLOUDFLARE_API_TOKEN: test-key
        MINDCHAT_API_TOKEN: test-key
        MINDCHAT_API_BASE_URL: https://test.mindchat.com
        MINDCHAT_API_DOCS: https://test.mindchat.com/docs

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t aria-sdr:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm aria-sdr:latest python -c "import main; print('Docker image OK')"